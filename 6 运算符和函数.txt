第6章 MySQL运算符及函数

1）字符函数
2）数值运算符与函数
3）比较运算符与函数
4）日期时间函数
5）信息函数
6）聚合函数
7）加密函数

1）字符函数
CONCAT() 字符连接
CONCAT_WS() 使用指定的分隔符
FORMAT() 数字格式化
LOWER() 转化成小写字母
UPPER() 转换成大写字母
LEFT()  获取左侧字符
RIGHT() 获取右侧字符
LENGTH() 获取字符串长度
LTRIM() 删除前导空格
RTRIM() 删除后续空格
TRIM() 删除前导和后续空格
SUBSTRING() 字符串截取
[NOT] LIKE 模式匹配
REPLACE() 字符串替换

-- CONCAT() 字符连接
SELECT CONCAT('imooc', 'mysql');
SELECT CONCAT('imooc','-','MySQL');
SELECT CONCAT(first_name, last_name) AS full_name FROM test;

-- CONCAT_WS() 使用指定的分隔符
SELECT CONCAT_WS('|','A','B','C');
SELECT CONCAT_WS('-','imooc','MySQL');

-- FORMAT() 数字格式化
SELECT FORMAT(12560.75,2);
SELECT FORMAT(12560.75,1);

-- LOWER() 转化成小写字母
SELECT LOWER('MySQL');

-- UPPER() 转换成大写字母
SELECT UPPER('MySQL');

-- LEFT() 获取左侧字符
SELECT LOWER('MySQL',2);
SELECT LOWER(LEFT('MySQL',2));

-- RIGHT() 获取左侧字符
SELECT RIGHT('MySQL',3);
SELECT LOWER(RIGHT('MySQL',3));

-- LENGTH() 获取字符串长度
SELECT LENGTH("My SQL");

-- LTRIM() 删除前导空格
SELECT LTRIM("  My SQL    ");
SELECT LENGTH(LTRIM("  My SQL    "));

-- RTRIM() 删除后续空格
SELECT LENGTH(RTRIM("  My SQL    "));

--TRIM() 删除前导和后续空格,中间的删不了
SELECT LENGTH(TRIM("  My SQL    "));
SELECT TRIM(LEADING '?' FROM '??MySQL???');
SELECT TRIM(TRAILING '?' FROM '??MySQL???');
SELECT TRIM(BOTH '?' FROM '??MySQL???');

-- REPLACE() 字符串替换
SELECT REPLACE('??My??SQL???','?','');
SELECT REPLACE('??My??SQL???','?','!*');

-- SUBSTRING() 字符串截取
SELECT SUBSTRING("MySQL", 1, 2);
SELECT SUBSTRING("MySQL", 3);
SELECT SUBSTRING("MySQL", -2);

-- [NOT] LIKE 模式匹配
%匹配1到多个字符，匹配1个字符
SELECT 'MySQL' LIKE 'M%';

--  转义字符处理
SELECT 'tom%' LIKE "%%%"; -- 无效
SELECT 'tom%' LIKE "%1%%" ESCAPE '1';

2）数组运算符及函数
CEIL()  进一取整
DIV()   整数除法
FLOOR() 舍一取整
MOD()   取模
POWER() 冥运算
ROUND()     四舍五入
TRUNCATE()  数字截取

SELECT CEIL(3.01); -- 4
SELECT FLOOR(3.99); -- 3
SELECT 3 DIV 4; -- 0
SELECT 5 MOD 3; -- 2
SELECT 5.3 MOD 3; -- 2.3
SELECT POWER(3,4); -- 81
SELECT ROUND(3.652, 2);  -- 3.65
SELECT ROUND(3.652, 1);  -- 3.7
SELECT ROUND(3.652, 2);  -- 4
SELECT TRUNCATE(125.89, 0); -- 125
SELECT TRUNCATE(125.89, 1); -- 125.8
SELECT TRUNCATE(125.89, -1); -- 120

3) 比较运算符与函数
[NOT] BETWEEN...AND...  [不]在范围之内
[NOT] IN()              [不]在列出值范围内
IS [NOT] NULL           [不]为空

SELECT 15 BETWEEN 1 AND 20; -- 1
SELECT 35 BETWEEN 1 AND 20; -- 0
SELECT 10 IN (5, 10, 15, 20); -- 1
SELECT 13 IN (5, 10, 15, 20); -- 1
SELECT NULL IS NULL; -- 1
SELECT 0 IS NULL; -- 0
SELECT '' IS NOT NULL; -- 1
SELECT * FROM test WHERE first_name IS NULL;

4) 日期时间函数

NOW()         当前日期和时间
CURDATE()     当前日期
CURTIME()     当前时间
DATE_ADD()    日期变化
DATEDIFF()    日期差值
DATE_FORMAT() 日期格式化

SELECT NOW(); -- 2016-07-24 20:35:18
SELECT CURDATE(); -- 2016-07-24
SELECT CURRTIME(); -- 20:36:52
SELECT DATE_ADD('2016-07-24', INTERVAL 100 DAY); -- 2016-07-24
SELECT DATE_ADD('2016-07-24', INTERVAL -100 DAY); -- 2016-04-15
SELECT DATE_ADD('2016-07-24', INTERVAL 1 YEAR); -- 2017-07-24
SELECT DATE_ADD('2016-07-24', INTERVAL 3 WEEK); -- 2016-08-14
SELECT DATEDIFF('2016-07-24', '2016-08-13'); -- -20
SELECT DATE_FORMAT('2016-07-24', '%m/%d/%Y'); -- 07/24/2016

**************************************************************
由于日期时间类型开发中很少用到，日期时间函数开发中也很少用到
**************************************************************

5）信息函数
CONNECTION_ID()   连接ID
DATABASE()        当前数据库
LAST_INSERT_ID()  最后插入记录的ID号
USER()            当前用户
VERSION()         版本信息

SELECT CONNECTION_ID();
SELECT DATABASE();
SELECT LAST_INSERT_ID();
SELECT USER();
SELECT VERSION();

6) 聚合函数
AVG()
COUNT()
MAX()
MIN()
SUM()

SELECT ROUND(AVG(goods_price)) AS avg_price FROM tdb_goods; -- 5654.81
SELECT COUNT(goods_id) AS counts FROM tdb_goods; -- 21
SELECT MAX(goods_price) AS max_price FROM tdb_goods; -- 28888.000
SELECT MIN(goods_price) AS min_price FROM tdb_goods; -- 99.000
SELECT SUM(goods_price) AS max_price FROM tdb_goods; -- 118751.000

7)加密函数
MD5()         信息摘要算法
PASSWORD()    密码算法

SELECT MD5('admin');
SELECT PASSWORD('admin');
SET PASSWORD = PASSWORD("654321");